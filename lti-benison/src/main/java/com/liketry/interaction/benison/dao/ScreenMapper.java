package com.liketry.interaction.benison.dao;

import com.liketry.interaction.benison.model.Screen;

import com.liketry.interaction.benison.vo.api.ScreenVo;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.HashMap;
import java.util.List;

@Repository
public interface ScreenMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    int deleteByPrimaryKey(String screenId);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    int insert(Screen record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    int insertSelective(Screen record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    Screen selectByPrimaryKey(String screenId);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    int updateByPrimaryKeySelective(Screen record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table bu_screen
     *
     * @mbggenerated Mon Jul 10 14:00:47 CST 2017
     */
    int updateByPrimaryKey(Screen record);

    //根据状�?�查询所有数�?
    List<HashMap<String, String>> selectAll(String screenStatus);

    //逻辑删除
    int deleteLogicById(String screenId);

    List<Screen> selectByName(String name);

    //根据状�?�查询所有数�?
    List<Screen> selectNormalAll();

    /**
     * @param templateId
     * @return
     */
    Screen selectScreen(@Param(value = "templateId") String templateId);

    //获取热门景区
    List<String> selectHotScreenId(int screenSize);

    // 获取额外指定数量的屏�?
    List<String> findExtraScreenId(@Param("extras") List<String> extras, @Param("screenSize") int screenSize);

    //获取符合经纬度要求的屏幕
    List<ScreenVo> aroundScreen(@Param("leftLongitude") double leftLongitude, @Param("rightLongitude") double rightLongitude, @Param("topLatitude") double topLatitude, @Param("bottomLatitude") double bottomLatitude);

    //根据屏幕id返回景区id
    String findByScreenId(@Param("screenId") String screenId);
}